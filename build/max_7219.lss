
build\max_7219.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000396  00800100  0000055e  000005f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800496  00800496  00000988  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000099c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000009e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000825  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005de  00000000  00000000  00001265  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000019a  00000000  00000000  00001843  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000019dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	14 e0       	ldi	r17, 0x04	; 4
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 39       	cpi	r26, 0x96	; 150
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	24 e0       	ldi	r18, 0x04	; 4
  8c:	a6 e9       	ldi	r26, 0x96	; 150
  8e:	b4 e0       	ldi	r27, 0x04	; 4
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 3a       	cpi	r26, 0xA3	; 163
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  9e:	0c 94 ad 02 	jmp	0x55a	; 0x55a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <key_handler>:
  a6:	81 11       	cpse	r24, r1
  a8:	07 c0       	rjmp	.+14     	; 0xb8 <key_handler+0x12>
  aa:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <direction>
  ae:	91 e0       	ldi	r25, 0x01	; 1
  b0:	89 27       	eor	r24, r25
  b2:	80 93 9a 04 	sts	0x049A, r24	; 0x80049a <direction>
  b6:	08 95       	ret
  b8:	81 30       	cpi	r24, 0x01	; 1
  ba:	51 f4       	brne	.+20     	; 0xd0 <key_handler+0x2a>
  bc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay>
  c0:	84 31       	cpi	r24, 0x14	; 20
  c2:	21 f4       	brne	.+8      	; 0xcc <key_handler+0x26>
  c4:	8a e0       	ldi	r24, 0x0A	; 10
  c6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <delay>
  ca:	08 95       	ret
  cc:	84 e1       	ldi	r24, 0x14	; 20
  ce:	fb cf       	rjmp	.-10     	; 0xc6 <key_handler+0x20>
  d0:	82 30       	cpi	r24, 0x02	; 2
  d2:	49 f4       	brne	.+18     	; 0xe6 <key_handler+0x40>
  d4:	80 91 99 04 	lds	r24, 0x0499	; 0x800499 <mode>
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	89 27       	eor	r24, r25
  dc:	80 93 99 04 	sts	0x0499, r24	; 0x800499 <mode>
  e0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <data>
  e4:	08 95       	ret
  e6:	83 30       	cpi	r24, 0x03	; 3
  e8:	69 f4       	brne	.+26     	; 0x104 <key_handler+0x5e>
  ea:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <data>
  ee:	8f 5f       	subi	r24, 0xFF	; 255
  f0:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <data>
  f4:	08 95       	ret
  f6:	80 91 98 04 	lds	r24, 0x0498	; 0x800498 <pause>
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	89 27       	eor	r24, r25
  fe:	80 93 98 04 	sts	0x0498, r24	; 0x800498 <pause>
 102:	08 95       	ret
 104:	84 30       	cpi	r24, 0x04	; 4
 106:	b9 f3       	breq	.-18     	; 0xf6 <key_handler+0x50>
 108:	08 95       	ret

0000010a <scan_key>:
 10a:	cf 93       	push	r28
 10c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dirReg.1827>
 110:	88 0f       	add	r24, r24
 112:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <dirReg.1827>
 116:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
 11a:	cc 0f       	add	r28, r28
 11c:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
 120:	19 9b       	sbis	0x03, 1	; 3
 122:	03 c0       	rjmp	.+6      	; 0x12a <scan_key+0x20>
 124:	81 60       	ori	r24, 0x01	; 1
 126:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <dirReg.1827>
 12a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dirReg.1827>
 12e:	8f 70       	andi	r24, 0x0F	; 15
 130:	83 30       	cpi	r24, 0x03	; 3
 132:	51 f4       	brne	.+20     	; 0x148 <scan_key+0x3e>
 134:	80 91 98 04 	lds	r24, 0x0498	; 0x800498 <pause>
 138:	81 11       	cpse	r24, r1
 13a:	06 c0       	rjmp	.+12     	; 0x148 <scan_key+0x3e>
 13c:	80 91 99 04 	lds	r24, 0x0499	; 0x800499 <mode>
 140:	81 11       	cpse	r24, r1
 142:	24 c0       	rjmp	.+72     	; 0x18c <scan_key+0x82>
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <key_handler>
 148:	1a 9b       	sbis	0x03, 2	; 3
 14a:	22 c0       	rjmp	.+68     	; 0x190 <scan_key+0x86>
 14c:	c1 60       	ori	r28, 0x01	; 1
 14e:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
 152:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 156:	8f 70       	andi	r24, 0x0F	; 15
 158:	83 30       	cpi	r24, 0x03	; 3
 15a:	b1 f4       	brne	.+44     	; 0x188 <scan_key+0x7e>
 15c:	c0 91 98 04 	lds	r28, 0x0498	; 0x800498 <pause>
 160:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <__data_end>
 164:	90 91 97 04 	lds	r25, 0x0497	; 0x800497 <__data_end+0x1>
 168:	c3 97       	sbiw	r24, 0x33	; 51
 16a:	e0 f0       	brcs	.+56     	; 0x1a4 <scan_key+0x9a>
 16c:	c1 30       	cpi	r28, 0x01	; 1
 16e:	d1 f4       	brne	.+52     	; 0x1a4 <scan_key+0x9a>
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	0e 94 53 00 	call	0xa6	; 0xa6 <key_handler>
 176:	80 91 98 04 	lds	r24, 0x0498	; 0x800498 <pause>
 17a:	c8 27       	eor	r28, r24
 17c:	c0 93 98 04 	sts	0x0498, r28	; 0x800498 <pause>
 180:	10 92 97 04 	sts	0x0497, r1	; 0x800497 <__data_end+0x1>
 184:	10 92 96 04 	sts	0x0496, r1	; 0x800496 <__data_end>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret
 18c:	83 e0       	ldi	r24, 0x03	; 3
 18e:	da cf       	rjmp	.-76     	; 0x144 <scan_key+0x3a>
 190:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <__data_end>
 194:	90 91 97 04 	lds	r25, 0x0497	; 0x800497 <__data_end+0x1>
 198:	01 96       	adiw	r24, 0x01	; 1
 19a:	90 93 97 04 	sts	0x0497, r25	; 0x800497 <__data_end+0x1>
 19e:	80 93 96 04 	sts	0x0496, r24	; 0x800496 <__data_end>
 1a2:	d7 cf       	rjmp	.-82     	; 0x152 <scan_key+0x48>
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	e9 cf       	rjmp	.-46     	; 0x17a <scan_key+0x70>

000001a8 <main>:
 1a8:	0e 94 40 01 	call	0x280	; 0x280 <max7219_Init>
 1ac:	0e 94 59 01 	call	0x2b2	; 0x2b2 <initBuffer>
 1b0:	84 e0       	ldi	r24, 0x04	; 4
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	0e 94 9d 02 	call	0x53a	; 0x53a <displayMessage>
 1b8:	86 e0       	ldi	r24, 0x06	; 6
 1ba:	e8 2e       	mov	r14, r24
 1bc:	f1 2c       	mov	r15, r1
 1be:	0d e1       	ldi	r16, 0x1D	; 29
 1c0:	11 e0       	ldi	r17, 0x01	; 1
 1c2:	c1 e0       	ldi	r28, 0x01	; 1
 1c4:	f8 01       	movw	r30, r16
 1c6:	80 81       	ld	r24, Z
 1c8:	0e 5f       	subi	r16, 0xFE	; 254
 1ca:	1f 4f       	sbci	r17, 0xFF	; 255
 1cc:	0e 94 64 01 	call	0x2c8	; 0x2c8 <shiftBuffer>
 1d0:	8c 2f       	mov	r24, r28
 1d2:	87 70       	andi	r24, 0x07	; 7
 1d4:	d9 f4       	brne	.+54     	; 0x20c <main+0x64>
 1d6:	0e 94 6f 01 	call	0x2de	; 0x2de <displayBuffer>
 1da:	ff e7       	ldi	r31, 0x7F	; 127
 1dc:	22 e3       	ldi	r18, 0x32	; 50
 1de:	82 e0       	ldi	r24, 0x02	; 2
 1e0:	f1 50       	subi	r31, 0x01	; 1
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x38>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x42>
 1ea:	00 00       	nop
 1ec:	cf 5f       	subi	r28, 0xFF	; 255
 1ee:	c9 33       	cpi	r28, 0x39	; 57
 1f0:	49 f7       	brne	.-46     	; 0x1c4 <main+0x1c>
 1f2:	21 e0       	ldi	r18, 0x01	; 1
 1f4:	e2 1a       	sub	r14, r18
 1f6:	f1 08       	sbc	r15, r1
 1f8:	11 f7       	brne	.-60     	; 0x1be <main+0x16>
 1fa:	0e 94 85 00 	call	0x10a	; 0x10a <scan_key>
 1fe:	8f e1       	ldi	r24, 0x1F	; 31
 200:	9e e4       	ldi	r25, 0x4E	; 78
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <main+0x5a>
 206:	00 c0       	rjmp	.+0      	; 0x208 <main+0x60>
 208:	00 00       	nop
 20a:	d2 cf       	rjmp	.-92     	; 0x1b0 <main+0x8>
 20c:	c8 30       	cpi	r28, 0x08	; 8
 20e:	11 f0       	breq	.+4      	; 0x214 <main+0x6c>
 210:	c8 33       	cpi	r28, 0x38	; 56
 212:	61 f7       	brne	.-40     	; 0x1ec <main+0x44>
 214:	9f e7       	ldi	r25, 0x7F	; 127
 216:	e8 e3       	ldi	r30, 0x38	; 56
 218:	f1 e0       	ldi	r31, 0x01	; 1
 21a:	91 50       	subi	r25, 0x01	; 1
 21c:	e0 40       	sbci	r30, 0x00	; 0
 21e:	f0 40       	sbci	r31, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x72>
 222:	e2 cf       	rjmp	.-60     	; 0x1e8 <main+0x40>

00000224 <SPI_MasterInit>:
 224:	84 b1       	in	r24, 0x04	; 4
 226:	88 62       	ori	r24, 0x28	; 40
 228:	84 b9       	out	0x04, r24	; 4
 22a:	81 e5       	ldi	r24, 0x51	; 81
 22c:	8c bd       	out	0x2c, r24	; 44
 22e:	08 95       	ret

00000230 <SPI_MasterTransmit>:
 230:	8e bd       	out	0x2e, r24	; 46
 232:	0d b4       	in	r0, 0x2d	; 45
 234:	07 fe       	sbrs	r0, 7
 236:	fd cf       	rjmp	.-6      	; 0x232 <SPI_MasterTransmit+0x2>
 238:	08 95       	ret

0000023a <SPI_SlaveInit>:
 23a:	80 e1       	ldi	r24, 0x10	; 16
 23c:	84 b9       	out	0x04, r24	; 4
 23e:	84 b1       	in	r24, 0x04	; 4
 240:	87 7d       	andi	r24, 0xD7	; 215
 242:	84 b9       	out	0x04, r24	; 4
 244:	80 e4       	ldi	r24, 0x40	; 64
 246:	8c bd       	out	0x2c, r24	; 44
 248:	08 95       	ret

0000024a <SPI_SlaveReceive>:
 24a:	0d b4       	in	r0, 0x2d	; 45
 24c:	07 fe       	sbrs	r0, 7
 24e:	fd cf       	rjmp	.-6      	; 0x24a <SPI_SlaveReceive>
 250:	8e b5       	in	r24, 0x2e	; 46
 252:	08 95       	ret

00000254 <max7219_sendData>:
 254:	2a 98       	cbi	0x05, 2	; 5
 256:	8e bd       	out	0x2e, r24	; 46
 258:	0d b4       	in	r0, 0x2d	; 45
 25a:	07 fe       	sbrs	r0, 7
 25c:	fd cf       	rjmp	.-6      	; 0x258 <max7219_sendData+0x4>
 25e:	6e bd       	out	0x2e, r22	; 46
 260:	0d b4       	in	r0, 0x2d	; 45
 262:	07 fe       	sbrs	r0, 7
 264:	fd cf       	rjmp	.-6      	; 0x260 <max7219_sendData+0xc>
 266:	2a 9a       	sbi	0x05, 2	; 5
 268:	08 95       	ret

0000026a <max7219_Clear>:
 26a:	cf 93       	push	r28
 26c:	c0 e0       	ldi	r28, 0x00	; 0
 26e:	cf 5f       	subi	r28, 0xFF	; 255
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	8c 2f       	mov	r24, r28
 274:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 278:	c8 30       	cpi	r28, 0x08	; 8
 27a:	c9 f7       	brne	.-14     	; 0x26e <max7219_Clear+0x4>
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <max7219_Init>:
 280:	0e 94 12 01 	call	0x224	; 0x224 <SPI_MasterInit>
 284:	22 9a       	sbi	0x04, 2	; 4
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	8f e0       	ldi	r24, 0x0F	; 15
 28a:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 28e:	60 e0       	ldi	r22, 0x00	; 0
 290:	89 e0       	ldi	r24, 0x09	; 9
 292:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 296:	67 e0       	ldi	r22, 0x07	; 7
 298:	8b e0       	ldi	r24, 0x0B	; 11
 29a:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 29e:	65 e0       	ldi	r22, 0x05	; 5
 2a0:	8a e0       	ldi	r24, 0x0A	; 10
 2a2:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	8c e0       	ldi	r24, 0x0C	; 12
 2aa:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 2ae:	0c 94 35 01 	jmp	0x26a	; 0x26a <max7219_Clear>

000002b2 <initBuffer>:
 2b2:	eb e9       	ldi	r30, 0x9B	; 155
 2b4:	f4 e0       	ldi	r31, 0x04	; 4
 2b6:	10 82       	st	Z, r1
 2b8:	11 82       	std	Z+1, r1	; 0x01
 2ba:	12 82       	std	Z+2, r1	; 0x02
 2bc:	13 82       	std	Z+3, r1	; 0x03
 2be:	14 82       	std	Z+4, r1	; 0x04
 2c0:	15 82       	std	Z+5, r1	; 0x05
 2c2:	16 82       	std	Z+6, r1	; 0x06
 2c4:	17 82       	std	Z+7, r1	; 0x07
 2c6:	08 95       	ret

000002c8 <shiftBuffer>:
 2c8:	eb e9       	ldi	r30, 0x9B	; 155
 2ca:	f4 e0       	ldi	r31, 0x04	; 4
 2cc:	91 81       	ldd	r25, Z+1	; 0x01
 2ce:	91 93       	st	Z+, r25
 2d0:	94 e0       	ldi	r25, 0x04	; 4
 2d2:	e2 3a       	cpi	r30, 0xA2	; 162
 2d4:	f9 07       	cpc	r31, r25
 2d6:	d1 f7       	brne	.-12     	; 0x2cc <shiftBuffer+0x4>
 2d8:	80 93 a2 04 	sts	0x04A2, r24	; 0x8004a2 <buffer+0x7>
 2dc:	08 95       	ret

000002de <displayBuffer>:
 2de:	0f 93       	push	r16
 2e0:	1f 93       	push	r17
 2e2:	cf 93       	push	r28
 2e4:	0b e9       	ldi	r16, 0x9B	; 155
 2e6:	14 e0       	ldi	r17, 0x04	; 4
 2e8:	c1 e0       	ldi	r28, 0x01	; 1
 2ea:	f8 01       	movw	r30, r16
 2ec:	61 91       	ld	r22, Z+
 2ee:	8f 01       	movw	r16, r30
 2f0:	8c 2f       	mov	r24, r28
 2f2:	0e 94 2a 01 	call	0x254	; 0x254 <max7219_sendData>
 2f6:	cf 5f       	subi	r28, 0xFF	; 255
 2f8:	c9 30       	cpi	r28, 0x09	; 9
 2fa:	b9 f7       	brne	.-18     	; 0x2ea <displayBuffer+0xc>
 2fc:	cf 91       	pop	r28
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	08 95       	ret

00000304 <setPixel>:
 304:	61 50       	subi	r22, 0x01	; 1
 306:	e6 2f       	mov	r30, r22
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	28 e0       	ldi	r18, 0x08	; 8
 30c:	28 1b       	sub	r18, r24
 30e:	e5 56       	subi	r30, 0x65	; 101
 310:	fb 4f       	sbci	r31, 0xFB	; 251
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	02 2e       	mov	r0, r18
 318:	01 c0       	rjmp	.+2      	; 0x31c <setPixel+0x18>
 31a:	88 0f       	add	r24, r24
 31c:	0a 94       	dec	r0
 31e:	ea f7       	brpl	.-6      	; 0x31a <setPixel+0x16>
 320:	80 95       	com	r24
 322:	90 81       	ld	r25, Z
 324:	89 23       	and	r24, r25
 326:	01 c0       	rjmp	.+2      	; 0x32a <setPixel+0x26>
 328:	44 0f       	add	r20, r20
 32a:	2a 95       	dec	r18
 32c:	ea f7       	brpl	.-6      	; 0x328 <setPixel+0x24>
 32e:	84 2b       	or	r24, r20
 330:	80 83       	st	Z, r24
 332:	08 95       	ret

00000334 <rotateBuffer>:
 334:	2f 92       	push	r2
 336:	3f 92       	push	r3
 338:	5f 92       	push	r5
 33a:	6f 92       	push	r6
 33c:	7f 92       	push	r7
 33e:	8f 92       	push	r8
 340:	9f 92       	push	r9
 342:	af 92       	push	r10
 344:	bf 92       	push	r11
 346:	cf 92       	push	r12
 348:	df 92       	push	r13
 34a:	ef 92       	push	r14
 34c:	ff 92       	push	r15
 34e:	0f 93       	push	r16
 350:	1f 93       	push	r17
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	cd b7       	in	r28, 0x3d	; 61
 358:	de b7       	in	r29, 0x3e	; 62
 35a:	28 97       	sbiw	r28, 0x08	; 8
 35c:	0f b6       	in	r0, 0x3f	; 63
 35e:	f8 94       	cli
 360:	de bf       	out	0x3e, r29	; 62
 362:	0f be       	out	0x3f, r0	; 63
 364:	cd bf       	out	0x3d, r28	; 61
 366:	fe 01       	movw	r30, r28
 368:	31 96       	adiw	r30, 0x01	; 1
 36a:	1c 01       	movw	r2, r24
 36c:	28 e0       	ldi	r18, 0x08	; 8
 36e:	22 0e       	add	r2, r18
 370:	31 1c       	adc	r3, r1
 372:	9f 01       	movw	r18, r30
 374:	ac 01       	movw	r20, r24
 376:	da 01       	movw	r26, r20
 378:	6d 91       	ld	r22, X+
 37a:	ad 01       	movw	r20, r26
 37c:	d9 01       	movw	r26, r18
 37e:	6d 93       	st	X+, r22
 380:	9d 01       	movw	r18, r26
 382:	42 15       	cp	r20, r2
 384:	53 05       	cpc	r21, r3
 386:	b9 f7       	brne	.-18     	; 0x376 <rotateBuffer+0x42>
 388:	7f 01       	movw	r14, r30
 38a:	07 e0       	ldi	r16, 0x07	; 7
 38c:	10 e0       	ldi	r17, 0x00	; 0
 38e:	88 24       	eor	r8, r8
 390:	83 94       	inc	r8
 392:	91 2c       	mov	r9, r1
 394:	d7 01       	movw	r26, r14
 396:	ad 90       	ld	r10, X+
 398:	7d 01       	movw	r14, r26
 39a:	b1 2c       	mov	r11, r1
 39c:	34 01       	movw	r6, r8
 39e:	00 2e       	mov	r0, r16
 3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <rotateBuffer+0x70>
 3a2:	66 0c       	add	r6, r6
 3a4:	0a 94       	dec	r0
 3a6:	ea f7       	brpl	.-6      	; 0x3a2 <rotateBuffer+0x6e>
 3a8:	56 2c       	mov	r5, r6
 3aa:	60 94       	com	r6
 3ac:	dc 01       	movw	r26, r24
 3ae:	67 e0       	ldi	r22, 0x07	; 7
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	7c 90       	ld	r7, X
 3b4:	65 01       	movw	r12, r10
 3b6:	06 2e       	mov	r0, r22
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <rotateBuffer+0x8a>
 3ba:	d5 94       	asr	r13
 3bc:	c7 94       	ror	r12
 3be:	0a 94       	dec	r0
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <rotateBuffer+0x86>
 3c2:	c0 fe       	sbrs	r12, 0
 3c4:	6b c0       	rjmp	.+214    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 3c6:	75 28       	or	r7, r5
 3c8:	7c 92       	st	X, r7
 3ca:	61 50       	subi	r22, 0x01	; 1
 3cc:	71 09       	sbc	r23, r1
 3ce:	11 96       	adiw	r26, 0x01	; 1
 3d0:	6f 3f       	cpi	r22, 0xFF	; 255
 3d2:	76 07       	cpc	r23, r22
 3d4:	71 f7       	brne	.-36     	; 0x3b2 <rotateBuffer+0x7e>
 3d6:	01 50       	subi	r16, 0x01	; 1
 3d8:	11 09       	sbc	r17, r1
 3da:	e0 f6       	brcc	.-72     	; 0x394 <rotateBuffer+0x60>
 3dc:	bc 01       	movw	r22, r24
 3de:	6c 5f       	subi	r22, 0xFC	; 252
 3e0:	7f 4f       	sbci	r23, 0xFF	; 255
 3e2:	9c 01       	movw	r18, r24
 3e4:	d9 01       	movw	r26, r18
 3e6:	1d 91       	ld	r17, X+
 3e8:	9d 01       	movw	r18, r26
 3ea:	d1 01       	movw	r26, r2
 3ec:	0e 91       	ld	r16, -X
 3ee:	1d 01       	movw	r2, r26
 3f0:	79 01       	movw	r14, r18
 3f2:	b1 e0       	ldi	r27, 0x01	; 1
 3f4:	eb 1a       	sub	r14, r27
 3f6:	f1 08       	sbc	r15, r1
 3f8:	d7 01       	movw	r26, r14
 3fa:	0c 93       	st	X, r16
 3fc:	d1 01       	movw	r26, r2
 3fe:	1c 93       	st	X, r17
 400:	62 17       	cp	r22, r18
 402:	73 07       	cpc	r23, r19
 404:	79 f7       	brne	.-34     	; 0x3e4 <rotateBuffer+0xb0>
 406:	9f 01       	movw	r18, r30
 408:	8c 01       	movw	r16, r24
 40a:	d8 01       	movw	r26, r16
 40c:	6d 91       	ld	r22, X+
 40e:	8d 01       	movw	r16, r26
 410:	d9 01       	movw	r26, r18
 412:	6d 93       	st	X+, r22
 414:	9d 01       	movw	r18, r26
 416:	40 17       	cp	r20, r16
 418:	51 07       	cpc	r21, r17
 41a:	b9 f7       	brne	.-18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 41c:	67 e0       	ldi	r22, 0x07	; 7
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	ee 24       	eor	r14, r14
 422:	e3 94       	inc	r14
 424:	f1 2c       	mov	r15, r1
 426:	01 91       	ld	r16, Z+
 428:	10 e0       	ldi	r17, 0x00	; 0
 42a:	97 01       	movw	r18, r14
 42c:	06 2e       	mov	r0, r22
 42e:	01 c0       	rjmp	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	22 0f       	add	r18, r18
 432:	0a 94       	dec	r0
 434:	ea f7       	brpl	.-6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 436:	b2 2e       	mov	r11, r18
 438:	32 2f       	mov	r19, r18
 43a:	30 95       	com	r19
 43c:	dc 01       	movw	r26, r24
 43e:	47 e0       	ldi	r20, 0x07	; 7
 440:	50 e0       	ldi	r21, 0x00	; 0
 442:	2c 91       	ld	r18, X
 444:	68 01       	movw	r12, r16
 446:	04 2e       	mov	r0, r20
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	d5 94       	asr	r13
 44c:	c7 94       	ror	r12
 44e:	0a 94       	dec	r0
 450:	e2 f7       	brpl	.-8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 452:	c0 fe       	sbrs	r12, 0
 454:	25 c0       	rjmp	.+74     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 456:	2b 29       	or	r18, r11
 458:	2c 93       	st	X, r18
 45a:	41 50       	subi	r20, 0x01	; 1
 45c:	51 09       	sbc	r21, r1
 45e:	11 96       	adiw	r26, 0x01	; 1
 460:	4f 3f       	cpi	r20, 0xFF	; 255
 462:	54 07       	cpc	r21, r20
 464:	71 f7       	brne	.-36     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 466:	61 50       	subi	r22, 0x01	; 1
 468:	71 09       	sbc	r23, r1
 46a:	e8 f6       	brcc	.-70     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 46c:	28 96       	adiw	r28, 0x08	; 8
 46e:	0f b6       	in	r0, 0x3f	; 63
 470:	f8 94       	cli
 472:	de bf       	out	0x3e, r29	; 62
 474:	0f be       	out	0x3f, r0	; 63
 476:	cd bf       	out	0x3d, r28	; 61
 478:	df 91       	pop	r29
 47a:	cf 91       	pop	r28
 47c:	1f 91       	pop	r17
 47e:	0f 91       	pop	r16
 480:	ff 90       	pop	r15
 482:	ef 90       	pop	r14
 484:	df 90       	pop	r13
 486:	cf 90       	pop	r12
 488:	bf 90       	pop	r11
 48a:	af 90       	pop	r10
 48c:	9f 90       	pop	r9
 48e:	8f 90       	pop	r8
 490:	7f 90       	pop	r7
 492:	6f 90       	pop	r6
 494:	5f 90       	pop	r5
 496:	3f 90       	pop	r3
 498:	2f 90       	pop	r2
 49a:	08 95       	ret
 49c:	76 20       	and	r7, r6
 49e:	94 cf       	rjmp	.-216    	; 0x3c8 <rotateBuffer+0x94>
 4a0:	23 23       	and	r18, r19
 4a2:	da cf       	rjmp	.-76     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>

000004a4 <pushCharacter>:
 4a4:	ef 92       	push	r14
 4a6:	ff 92       	push	r15
 4a8:	0f 93       	push	r16
 4aa:	1f 93       	push	r17
 4ac:	cf 93       	push	r28
 4ae:	df 93       	push	r29
 4b0:	cd b7       	in	r28, 0x3d	; 61
 4b2:	de b7       	in	r29, 0x3e	; 62
 4b4:	28 97       	sbiw	r28, 0x08	; 8
 4b6:	0f b6       	in	r0, 0x3f	; 63
 4b8:	f8 94       	cli
 4ba:	de bf       	out	0x3e, r29	; 62
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	cd bf       	out	0x3d, r28	; 61
 4c0:	8e 01       	movw	r16, r28
 4c2:	0f 5f       	subi	r16, 0xFF	; 255
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	28 e0       	ldi	r18, 0x08	; 8
 4c8:	82 9f       	mul	r24, r18
 4ca:	a0 01       	movw	r20, r0
 4cc:	11 24       	eor	r1, r1
 4ce:	d8 01       	movw	r26, r16
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	20 e0       	ldi	r18, 0x00	; 0
 4d4:	f9 01       	movw	r30, r18
 4d6:	e4 0f       	add	r30, r20
 4d8:	f5 1f       	adc	r31, r21
 4da:	e3 57       	subi	r30, 0x73	; 115
 4dc:	fe 4f       	sbci	r31, 0xFE	; 254
 4de:	90 81       	ld	r25, Z
 4e0:	9d 93       	st	X+, r25
 4e2:	2f 5f       	subi	r18, 0xFF	; 255
 4e4:	3f 4f       	sbci	r19, 0xFF	; 255
 4e6:	28 30       	cpi	r18, 0x08	; 8
 4e8:	31 05       	cpc	r19, r1
 4ea:	a1 f7       	brne	.-24     	; 0x4d4 <pushCharacter+0x30>
 4ec:	c8 01       	movw	r24, r16
 4ee:	0e 94 9a 01 	call	0x334	; 0x334 <rotateBuffer>
 4f2:	78 01       	movw	r14, r16
 4f4:	88 e0       	ldi	r24, 0x08	; 8
 4f6:	e8 0e       	add	r14, r24
 4f8:	f1 1c       	adc	r15, r1
 4fa:	f8 01       	movw	r30, r16
 4fc:	81 91       	ld	r24, Z+
 4fe:	8f 01       	movw	r16, r30
 500:	0e 94 64 01 	call	0x2c8	; 0x2c8 <shiftBuffer>
 504:	0e 94 6f 01 	call	0x2de	; 0x2de <displayBuffer>
 508:	ff ef       	ldi	r31, 0xFF	; 255
 50a:	2a e6       	ldi	r18, 0x6A	; 106
 50c:	83 e0       	ldi	r24, 0x03	; 3
 50e:	f1 50       	subi	r31, 0x01	; 1
 510:	20 40       	sbci	r18, 0x00	; 0
 512:	80 40       	sbci	r24, 0x00	; 0
 514:	e1 f7       	brne	.-8      	; 0x50e <pushCharacter+0x6a>
 516:	00 c0       	rjmp	.+0      	; 0x518 <pushCharacter+0x74>
 518:	00 00       	nop
 51a:	e0 16       	cp	r14, r16
 51c:	f1 06       	cpc	r15, r17
 51e:	69 f7       	brne	.-38     	; 0x4fa <pushCharacter+0x56>
 520:	28 96       	adiw	r28, 0x08	; 8
 522:	0f b6       	in	r0, 0x3f	; 63
 524:	f8 94       	cli
 526:	de bf       	out	0x3e, r29	; 62
 528:	0f be       	out	0x3f, r0	; 63
 52a:	cd bf       	out	0x3d, r28	; 61
 52c:	df 91       	pop	r29
 52e:	cf 91       	pop	r28
 530:	1f 91       	pop	r17
 532:	0f 91       	pop	r16
 534:	ff 90       	pop	r15
 536:	ef 90       	pop	r14
 538:	08 95       	ret

0000053a <displayMessage>:
 53a:	cf 93       	push	r28
 53c:	df 93       	push	r29
 53e:	ec 01       	movw	r28, r24
 540:	89 91       	ld	r24, Y+
 542:	81 11       	cpse	r24, r1
 544:	03 c0       	rjmp	.+6      	; 0x54c <displayMessage+0x12>
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	08 95       	ret
 54c:	80 52       	subi	r24, 0x20	; 32
 54e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <pushCharacter>
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	0e 94 64 01 	call	0x2c8	; 0x2c8 <shiftBuffer>
 558:	f3 cf       	rjmp	.-26     	; 0x540 <displayMessage+0x6>

0000055a <_exit>:
 55a:	f8 94       	cli

0000055c <__stop_program>:
 55c:	ff cf       	rjmp	.-2      	; 0x55c <__stop_program>
